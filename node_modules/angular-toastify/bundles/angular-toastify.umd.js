(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser')) :
    typeof define === 'function' && define.amd ? define('angular-toastify', ['exports', '@angular/core', '@angular/platform-browser'], factory) :
    (global = global || self, factory(global['angular-toastify'] = {}, global.ng.core, global.ng.platformBrowser));
}(this, function (exports, core, platformBrowser) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var toastIdentitySequence = 0;
    var Toast = /** @class */ (function () {
        function Toast(message, type) {
            this.message = message;
            this.type = type;
            this.time = new Date().getTime();
            this.id = toastIdentitySequence++;
        }
        return Toast;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {number} */
    var ToastType = {
        info: 0,
        success: 1,
        warning: 2,
        error: 3,
        default: 4,
    };
    ToastType[ToastType.info] = 'info';
    ToastType[ToastType.success] = 'success';
    ToastType[ToastType.warning] = 'warning';
    ToastType[ToastType.error] = 'error';
    ToastType[ToastType.default] = 'default';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ToastService = /** @class */ (function () {
        function ToastService() {
            this.toastAddedEvent = new core.EventEmitter();
            this.dismissAllEvent = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        ToastService.prototype.dismissAll = /**
         * @return {?}
         */
        function () {
            this.dismissAllEvent.emit();
        };
        /**
         * @param {?} message
         * @return {?}
         */
        ToastService.prototype.info = /**
         * @param {?} message
         * @return {?}
         */
        function (message) {
            /** @type {?} */
            var toast = new Toast(message, ToastType.info);
            this.toastAddedEvent.emit(toast);
        };
        /**
         * @param {?} message
         * @return {?}
         */
        ToastService.prototype.success = /**
         * @param {?} message
         * @return {?}
         */
        function (message) {
            /** @type {?} */
            var toast = new Toast(message, ToastType.success);
            this.toastAddedEvent.emit(toast);
        };
        /**
         * @param {?} message
         * @return {?}
         */
        ToastService.prototype.warn = /**
         * @param {?} message
         * @return {?}
         */
        function (message) {
            /** @type {?} */
            var toast = new Toast(message, ToastType.warning);
            this.toastAddedEvent.emit(toast);
        };
        /**
         * @param {?} message
         * @return {?}
         */
        ToastService.prototype.error = /**
         * @param {?} message
         * @return {?}
         */
        function (message) {
            /** @type {?} */
            var toast = new Toast(message, ToastType.error);
            this.toastAddedEvent.emit(toast);
        };
        /**
         * @param {?} message
         * @return {?}
         */
        ToastService.prototype.default = /**
         * @param {?} message
         * @return {?}
         */
        function (message) {
            /** @type {?} */
            var toast = new Toast(message, ToastType.default);
            this.toastAddedEvent.emit(toast);
        };
        ToastService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        ToastService.ctorParameters = function () { return []; };
        /** @nocollapse */ ToastService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function ToastService_Factory() { return new ToastService(); }, token: ToastService, providedIn: "root" });
        return ToastService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ToastifyToastContainerComponent = /** @class */ (function () {
        function ToastifyToastContainerComponent(_toastService, _cd) {
            this._toastService = _toastService;
            this._cd = _cd;
            this.transitionDurations = 400;
            this.position = 'top-right';
            this.transition = 'bounce';
            this.autoClose = 5000;
            this.hideProgressBar = false;
            this.pauseOnHover = true;
            this.pauseOnVisibilityChange = true;
            this.closeOnClick = true;
            this.newestOnTop = false;
            this.iconLibrary = 'none';
            this.ToastType = ToastType;
            this.toasts = new Array();
            this.toastTransitionDict = {};
        }
        /**
         * @return {?}
         */
        ToastifyToastContainerComponent.prototype.ngOnChanges = /**
         * @return {?}
         */
        function () {
            this._cd.markForCheck();
        };
        /**
         * @param {?} toast
         * @return {?}
         */
        ToastifyToastContainerComponent.prototype.dismiss = /**
         * @param {?} toast
         * @return {?}
         */
        function (toast) {
            var _this = this;
            this.toastTransitionDict[toast.id] = TransitionState.exiting;
            setTimeout((/**
             * @return {?}
             */
            function () {
                /** @type {?} */
                var index = _this.toasts.indexOf(toast);
                _this.toasts.splice(index, 1);
                _this._cd.markForCheck();
            }), this.transitionDurations);
        };
        /**
         * @param {?} toast
         * @return {?}
         */
        ToastifyToastContainerComponent.prototype.getClass = /**
         * @param {?} toast
         * @return {?}
         */
        function (toast) {
            /** @type {?} */
            var base = "toast toast--" + ToastType[toast.type] + " ";
            /** @type {?} */
            var state = this.toastTransitionDict[toast.id];
            if (state === TransitionState.entering) {
                base += this.transition + "-enter " + this.transition + "-enter--" + this.position;
            }
            else if (state === TransitionState.exiting) {
                base += this.transition + "-exit " + this.transition + "-exit--" + this.position;
            }
            return base;
        };
        /**
         * @return {?}
         */
        ToastifyToastContainerComponent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this._toastService.dismissAllEvent.subscribe((/**
             * @return {?}
             */
            function () {
                _this.toasts = new Array();
                _this._cd.markForCheck();
            }));
            this._toastService.toastAddedEvent.subscribe((/**
             * @param {?} toast
             * @return {?}
             */
            function (toast) {
                _this.toastTransitionDict[toast.id] = TransitionState.entering;
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.toastTransitionDict[toast.id] = TransitionState.noTransition;
                    _this._cd.markForCheck();
                }), _this.transitionDurations);
                if (_this.newestOnTop) {
                    _this.toasts.unshift(toast);
                }
                else {
                    _this.toasts.push(toast);
                }
                _this._cd.markForCheck();
            }));
        };
        ToastifyToastContainerComponent.decorators = [
            { type: core.Component, args: [{
                        // tslint:disable-next-line:component-selector
                        selector: 'lib-toastify-toast-container',
                        template: "<div class=\"toast-container toast-container--{{position}}\">\n    <lib-toastify-toast *ngFor=\"let toast of toasts\" [class]=\"getClass(toast)\" style=\"animation-fill-mode: both; animation-duration: 0.75s\"\n        [autoClose]=\"autoClose\" [toast]=\"toast\" (dismissEvent)=\"dismiss(toast)\" [hideProgressBar]=\"hideProgressBar\" [pauseOnHover]=\"pauseOnHover\"\n        [pauseOnVisibilityChange]=\"pauseOnVisibilityChange\" [closeOnClick]=\"closeOnClick\" [iconLibrary]=\"iconLibrary\">\n    </lib-toastify-toast>\n</div>",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        styles: [".toast-container{z-index:9999;-webkit-transform:translate3d(0,0,9999px);position:fixed;padding:4px;width:320px;box-sizing:border-box;color:#fff}.toast-container--top-left{top:1em;left:1em}.toast-container--top-center{top:1em;left:50%;margin-left:-160px}.toast-container--top-right{top:1em;right:1em}.toast-container--bottom-left{bottom:1em;left:1em}.toast-container--bottom-center{bottom:1em;left:50%;margin-left:-160px}.toast-container--bottom-right{bottom:1em;right:1em}@media only screen and (max-width :480px){.toast-container{width:100vw;padding:0;left:0;margin:0}.toast-container--top-center,.toast-container--top-left,.toast-container--top-right{top:0}.toast-container--bottom-center,.toast-container--bottom-left,.toast-container--bottom-right{bottom:0}.toast-container--rtl{right:0;left:initial}}.toast{position:relative;min-height:64px;box-sizing:border-box;margin-bottom:1rem;padding:8px;border-radius:1px;box-shadow:0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05);display:flex;justify-content:space-between;max-height:800px;overflow:hidden;font-family:sans-serif;cursor:pointer;direction:ltr}.toast--rtl{direction:rtl}.toast--default{background:#fff;color:#aaa}.toast--info{background:#3498db}.toast--success{background:#07bc0c}.toast--warning{background:#f1c40f}.toast--error{background:#e74c3c}.toast-body{margin:auto 0;flex:1}@media only screen and (max-width :480px){.toast{margin-bottom:0}}@-webkit-keyframes bounceInRight{60%,75%,90%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}from{opacity:0;-webkit-transform:translate3d(3000px,0,0);transform:translate3d(3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(-25px,0,0);transform:translate3d(-25px,0,0)}75%{-webkit-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}90%{-webkit-transform:translate3d(-5px,0,0);transform:translate3d(-5px,0,0)}to{-webkit-transform:none;transform:none}}@keyframes bounceInRight{60%,75%,90%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}from{opacity:0;-webkit-transform:translate3d(3000px,0,0);transform:translate3d(3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(-25px,0,0);transform:translate3d(-25px,0,0)}75%{-webkit-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}90%{-webkit-transform:translate3d(-5px,0,0);transform:translate3d(-5px,0,0)}to{-webkit-transform:none;transform:none}}@-webkit-keyframes bounceOutRight{20%{opacity:1;-webkit-transform:translate3d(-20px,0,0);transform:translate3d(-20px,0,0)}to{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}@keyframes bounceOutRight{20%{opacity:1;-webkit-transform:translate3d(-20px,0,0);transform:translate3d(-20px,0,0)}to{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}@-webkit-keyframes bounceInLeft{60%,75%,90%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(-3000px,0,0);transform:translate3d(-3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(25px,0,0);transform:translate3d(25px,0,0)}75%{-webkit-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}90%{-webkit-transform:translate3d(5px,0,0);transform:translate3d(5px,0,0)}to{-webkit-transform:none;transform:none}}@keyframes bounceInLeft{60%,75%,90%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(-3000px,0,0);transform:translate3d(-3000px,0,0)}60%{opacity:1;-webkit-transform:translate3d(25px,0,0);transform:translate3d(25px,0,0)}75%{-webkit-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}90%{-webkit-transform:translate3d(5px,0,0);transform:translate3d(5px,0,0)}to{-webkit-transform:none;transform:none}}@-webkit-keyframes bounceOutLeft{20%{opacity:1;-webkit-transform:translate3d(20px,0,0);transform:translate3d(20px,0,0)}to{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}@keyframes bounceOutLeft{20%{opacity:1;-webkit-transform:translate3d(20px,0,0);transform:translate3d(20px,0,0)}to{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}@-webkit-keyframes bounceInUp{60%,75%,90%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}from{opacity:0;-webkit-transform:translate3d(0,3000px,0);transform:translate3d(0,3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}75%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}90%{-webkit-transform:translate3d(0,-5px,0);transform:translate3d(0,-5px,0)}to{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes bounceInUp{60%,75%,90%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}from{opacity:0;-webkit-transform:translate3d(0,3000px,0);transform:translate3d(0,3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}75%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}90%{-webkit-transform:translate3d(0,-5px,0);transform:translate3d(0,-5px,0)}to{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@-webkit-keyframes bounceOutUp{20%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,20px,0);transform:translate3d(0,20px,0)}to{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}@keyframes bounceOutUp{20%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,20px,0);transform:translate3d(0,20px,0)}to{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}@-webkit-keyframes bounceInDown{60%,75%,90%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,-3000px,0);transform:translate3d(0,-3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,25px,0);transform:translate3d(0,25px,0)}75%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}90%{-webkit-transform:translate3d(0,5px,0);transform:translate3d(0,5px,0)}to{-webkit-transform:none;transform:none}}@keyframes bounceInDown{60%,75%,90%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,-3000px,0);transform:translate3d(0,-3000px,0)}60%{opacity:1;-webkit-transform:translate3d(0,25px,0);transform:translate3d(0,25px,0)}75%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}90%{-webkit-transform:translate3d(0,5px,0);transform:translate3d(0,5px,0)}to{-webkit-transform:none;transform:none}}@-webkit-keyframes bounceOutDown{20%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}@keyframes bounceOutDown{20%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}40%,45%{opacity:1;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}.bounce-enter--bottom-left,.bounce-enter--top-left{-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}.bounce-enter--bottom-right,.bounce-enter--top-right{-webkit-animation-name:bounceInRight;animation-name:bounceInRight}.bounce-enter--top-center{-webkit-animation-name:bounceInDown;animation-name:bounceInDown}.bounce-enter--bottom-center{-webkit-animation-name:bounceInUp;animation-name:bounceInUp}.bounce-exit--bottom-left,.bounce-exit--top-left{-webkit-animation-name:bounceOutLeft;animation-name:bounceOutLeft}.bounce-exit--bottom-right,.bounce-exit--top-right{-webkit-animation-name:bounceOutRight;animation-name:bounceOutRight}.bounce-exit--top-center{-webkit-animation-name:bounceOutUp;animation-name:bounceOutUp}.bounce-exit--bottom-center{-webkit-animation-name:bounceOutDown;animation-name:bounceOutDown}@-webkit-keyframes zoomIn{from{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes zoomIn{from{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}50%{opacity:1}}@-webkit-keyframes zoomOut{from{opacity:1}50%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}to{opacity:0}}@keyframes zoomOut{from{opacity:1}50%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}to{opacity:0}}.zoom-enter{-webkit-animation-name:zoomIn;animation-name:zoomIn}.zoom-exit{-webkit-animation-name:zoomOut;animation-name:zoomOut}@-webkit-keyframes flipIn{from{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(1,0,0,10deg);transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-5deg);transform:perspective(400px) rotate3d(1,0,0,-5deg)}to{-webkit-transform:perspective(400px);transform:perspective(400px)}}@keyframes flipIn{from{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(1,0,0,10deg);transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-5deg);transform:perspective(400px) rotate3d(1,0,0,-5deg)}to{-webkit-transform:perspective(400px);transform:perspective(400px)}}@-webkit-keyframes flipOut{from{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);opacity:1}to{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);opacity:0}}@keyframes flipOut{from{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);opacity:1}to{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);opacity:0}}.flip-enter{-webkit-animation-name:flipIn;animation-name:flipIn}.flip-exit{-webkit-animation-name:flipOut;animation-name:flipOut}@-webkit-keyframes slideInRight{from{-webkit-transform:translate3d(110%,0,0);transform:translate3d(110%,0,0);visibility:visible}to{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes slideInRight{from{-webkit-transform:translate3d(110%,0,0);transform:translate3d(110%,0,0);visibility:visible}to{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@-webkit-keyframes slideInLeft{from{-webkit-transform:translate3d(-110%,0,0);transform:translate3d(-110%,0,0);visibility:visible}to{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes slideInLeft{from{-webkit-transform:translate3d(-110%,0,0);transform:translate3d(-110%,0,0);visibility:visible}to{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@-webkit-keyframes slideInUp{from{-webkit-transform:translate3d(0,110%,0);transform:translate3d(0,110%,0);visibility:visible}to{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes slideInUp{from{-webkit-transform:translate3d(0,110%,0);transform:translate3d(0,110%,0);visibility:visible}to{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@-webkit-keyframes slideInDown{from{-webkit-transform:translate3d(0,-110%,0);transform:translate3d(0,-110%,0);visibility:visible}to{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes slideInDown{from{-webkit-transform:translate3d(0,-110%,0);transform:translate3d(0,-110%,0);visibility:visible}to{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@-webkit-keyframes slideOutRight{from{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}to{visibility:hidden;-webkit-transform:translate3d(110%,0,0);transform:translate3d(110%,0,0)}}@keyframes slideOutRight{from{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}to{visibility:hidden;-webkit-transform:translate3d(110%,0,0);transform:translate3d(110%,0,0)}}@-webkit-keyframes slideOutLeft{from{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}to{visibility:hidden;-webkit-transform:translate3d(-110%,0,0);transform:translate3d(-110%,0,0)}}@keyframes slideOutLeft{from{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}to{visibility:hidden;-webkit-transform:translate3d(-110%,0,0);transform:translate3d(-110%,0,0)}}@-webkit-keyframes slideOutDown{from{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}to{visibility:hidden;-webkit-transform:translate3d(0,500px,0);transform:translate3d(0,500px,0)}}@keyframes slideOutDown{from{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}to{visibility:hidden;-webkit-transform:translate3d(0,500px,0);transform:translate3d(0,500px,0)}}@-webkit-keyframes slideOutUp{from{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}to{visibility:hidden;-webkit-transform:translate3d(0,-500px,0);transform:translate3d(0,-500px,0)}}@keyframes slideOutUp{from{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}to{visibility:hidden;-webkit-transform:translate3d(0,-500px,0);transform:translate3d(0,-500px,0)}}.slide-enter--bottom-left,.slide-enter--top-left{-webkit-animation-name:slideInLeft;animation-name:slideInLeft}.slide-enter--bottom-right,.slide-enter--top-right{-webkit-animation-name:slideInRight;animation-name:slideInRight}.slide-enter--top-center{-webkit-animation-name:slideInDown;animation-name:slideInDown}.slide-enter--bottom-center{-webkit-animation-name:slideInUp;animation-name:slideInUp}.slide-exit--bottom-left,.slide-exit--top-left{-webkit-animation-name:slideOutLeft;animation-name:slideOutLeft}.slide-exit--bottom-right,.slide-exit--top-right{-webkit-animation-name:slideOutRight;animation-name:slideOutRight}.slide-exit--top-center{-webkit-animation-name:slideOutUp;animation-name:slideOutUp}.slide-exit--bottom-center{-webkit-animation-name:slideOutDown;animation-name:slideOutDown}"]
                    }] }
        ];
        /** @nocollapse */
        ToastifyToastContainerComponent.ctorParameters = function () { return [
            { type: ToastService },
            { type: core.ChangeDetectorRef }
        ]; };
        ToastifyToastContainerComponent.propDecorators = {
            position: [{ type: core.Input }],
            transition: [{ type: core.Input }],
            autoClose: [{ type: core.Input }],
            hideProgressBar: [{ type: core.Input }],
            pauseOnHover: [{ type: core.Input }],
            pauseOnVisibilityChange: [{ type: core.Input }],
            closeOnClick: [{ type: core.Input }],
            newestOnTop: [{ type: core.Input }],
            iconLibrary: [{ type: core.Input }]
        };
        return ToastifyToastContainerComponent;
    }());
    /** @enum {number} */
    var TransitionState = {
        entering: 0,
        noTransition: 1,
        exiting: 2,
    };
    TransitionState[TransitionState.entering] = 'entering';
    TransitionState[TransitionState.noTransition] = 'noTransition';
    TransitionState[TransitionState.exiting] = 'exiting';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ToastifyToastComponent = /** @class */ (function () {
        function ToastifyToastComponent(_cd, _zone) {
            this._cd = _cd;
            this._zone = _zone;
            this.autoClose = 5000;
            this.hideProgressBar = false;
            this.pauseOnHover = true;
            this.pauseOnVisibilityChange = true;
            this.closeOnClick = true;
            this.dismissEvent = new core.EventEmitter();
            this.ToastType = ToastType;
            this.running = false;
        }
        /**
         * @return {?}
         */
        ToastifyToastComponent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            this.autoCloseRemaining = this.autoClose;
            this.startTime = this.toast.time;
            // Do not start timer when toast is prompted while window is out of focus
            if (this.handleVisibilityChange && document.visibilityState === 'visible') {
                this.startCloseTimer();
            }
        };
        /**
         * @return {?}
         */
        ToastifyToastComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.clearTimerTimeout();
        };
        /**
         * @return {?}
         */
        ToastifyToastComponent.prototype.startCloseTimer = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (this.running || !this.autoClose) {
                return;
            }
            this.startTime = new Date().getTime();
            this.running = true;
            this.autoDismissTimeout = this._zone.runOutsideAngular((/**
             * @return {?}
             */
            function () {
                return setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this._zone.run((/**
                     * @return {?}
                     */
                    function () {
                        _this.dismissEvent.emit();
                        _this._cd.markForCheck();
                    }));
                }), _this.autoCloseRemaining);
            }));
        };
        /**
         * @return {?}
         */
        ToastifyToastComponent.prototype.pauseCloseTimer = /**
         * @return {?}
         */
        function () {
            this.running = false;
            this.clearTimerTimeout();
            // Calculate the elapsed time, subtract remaining time
            this.pauseTime = new Date().getTime();
            /** @type {?} */
            var elapsed = this.pauseTime - this.startTime;
            this.autoCloseRemaining -= elapsed;
        };
        /**
         * @return {?}
         */
        ToastifyToastComponent.prototype.clearTimerTimeout = /**
         * @return {?}
         */
        function () {
            if (this.autoDismissTimeout !== undefined) {
                clearTimeout(this.autoDismissTimeout);
            }
        };
        /**
         * @return {?}
         */
        ToastifyToastComponent.prototype.handleDismissButtonAction = /**
         * @return {?}
         */
        function () {
            if (this.closeOnClick) {
                return; // Let the other event handle the dismissal
            }
            this.clearTimerTimeout();
            this.dismissEvent.emit();
        };
        /**
         * @return {?}
         */
        ToastifyToastComponent.prototype.handleHostClick = /**
         * @return {?}
         */
        function () {
            if (this.closeOnClick) {
                this.clearTimerTimeout();
                this.dismissEvent.emit();
            }
        };
        /**
         * @return {?}
         */
        ToastifyToastComponent.prototype.handleMouseEnter = /**
         * @return {?}
         */
        function () {
            if (this.pauseOnHover) {
                this.pauseCloseTimer();
            }
        };
        /**
         * @return {?}
         */
        ToastifyToastComponent.prototype.handleMouseLeave = /**
         * @return {?}
         */
        function () {
            if (this.pauseOnHover) {
                this.startCloseTimer();
            }
        };
        /**
         * @return {?}
         */
        ToastifyToastComponent.prototype.handleVisibilityChange = /**
         * @return {?}
         */
        function () {
            if (!this.pauseOnVisibilityChange) {
                return;
            }
            if (document.visibilityState !== 'visible') {
                this.pauseCloseTimer();
                this._cd.detectChanges();
            }
            else {
                this.startCloseTimer();
            }
        };
        ToastifyToastComponent.decorators = [
            { type: core.Component, args: [{
                        // tslint:disable-next-line:component-selector
                        selector: 'lib-toastify-toast',
                        template: "<div role=\"alert\" class=\"toast-body\">\n    <div class=\"icon-container\">\n        <span *ngIf=\"iconLibrary == 'material'\" [ngSwitch]=\"toast.type\">\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.info\">info_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.default\">info_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.warning\">warning_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.error\">error_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.success\">done</i>\n        </span>\n        <span *ngIf=\"iconLibrary == 'font-awesome'\" [ngSwitch]=\"toast.type\">\n            <i *ngSwitchCase=\"ToastType.info\" class=\"fa fa-info\"></i>\n            <i *ngSwitchCase=\"ToastType.default\" class=\"fa fa-info\"></i>\n            <i *ngSwitchCase=\"ToastType.warning\" class=\"fa fa-exclamation-triangle\"></i>\n            <i *ngSwitchCase=\"ToastType.error\" class=\"fa fa-exclamation\"></i>\n            <i *ngSwitchCase=\"ToastType.success\" class=\"fa fa-check\"></i>\n        </span>\n    </div>\n    <div class=\"toast-container\">\n        <span>{{toast.message}}</span>\n    </div>\n</div>\n<button (click)=\"handleDismissButtonAction()\" class=\"close-button close-button--{{ToastType[toast.type]}}\" type=\"button\" aria-label=\"close\">\u2716</button>\n<div *ngIf=\"!hideProgressBar\" class=\"progress-bar progress-bar--{{ToastType[toast.type]}}\"\n    [style.animation-play-state]=\"running? 'running' : 'paused'\" [style.animation-duration]=\"this.autoClose + 'ms'\" style=\"opacity: 1;\"></div>",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        styles: [".toast{position:relative;min-height:64px;box-sizing:border-box;margin-bottom:1rem;padding:8px;border-radius:1px;box-shadow:0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05);display:flex;justify-content:space-between;max-height:800px;overflow:hidden;font-family:sans-serif;cursor:pointer;direction:ltr}.toast--rtl{direction:rtl}.toast--default{background:#fff;color:#aaa}.toast--info{background:#3498db}.toast--success{background:#07bc0c}.toast--warning{background:#f1c40f}.toast--error{background:#e74c3c}.toast-body{margin:auto 0;flex:1;vertical-align:middle}@media only screen and (max-width :480px){.toast{margin-bottom:0}}.close-button{color:#fff;font-weight:700;font-size:14px;background:0 0;outline:0;border:none;padding:0;cursor:pointer;opacity:.7;transition:.3s;align-self:flex-start}.close-button--default{color:#000;opacity:.3}.close-button:focus,.close-button:hover{opacity:1}@-webkit-keyframes trackProgress{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}100%{-webkit-transform:scaleX(0);transform:scaleX(0)}}@keyframes trackProgress{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}100%{-webkit-transform:scaleX(0);transform:scaleX(0)}}.progress-bar{position:absolute;bottom:0;left:0;width:100%;height:5px;z-index:9999;opacity:.7;background-color:rgba(255,255,255,.7);-webkit-transform-origin:left;transform-origin:left;-webkit-animation:linear forwards trackProgress;animation:linear forwards trackProgress}.progress-bar--animated{-webkit-animation:linear forwards trackProgress;animation:linear forwards trackProgress}.progress-bar--controlled{transition:transform .2s;transition:transform .2s,-webkit-transform .2s}.progress-bar--rtl{right:0;left:initial;-webkit-transform-origin:right;transform-origin:right}.progress-bar--default{background:linear-gradient(to right,#4cd964,#5ac8fa,#007aff,#34aadc,#5856d6,#ff2d55)}.icon-container{display:inline-block;width:25px;vertical-align:middle}.icon-container span{margin-right:.5rem;display:inline-block;text-align:center;width:20px}.icon-container span i{vertical-align:middle}.fa,.material-icons{font-size:18px}.toast-container{display:inline-block;width:calc(100% - 25px);vertical-align:middle}"]
                    }] }
        ];
        /** @nocollapse */
        ToastifyToastComponent.ctorParameters = function () { return [
            { type: core.ChangeDetectorRef },
            { type: core.NgZone }
        ]; };
        ToastifyToastComponent.propDecorators = {
            autoClose: [{ type: core.Input }],
            hideProgressBar: [{ type: core.Input }],
            pauseOnHover: [{ type: core.Input }],
            pauseOnVisibilityChange: [{ type: core.Input }],
            closeOnClick: [{ type: core.Input }],
            toast: [{ type: core.Input }],
            iconLibrary: [{ type: core.Input }],
            dismissEvent: [{ type: core.Output }],
            handleHostClick: [{ type: core.HostListener, args: ['click',] }],
            handleMouseEnter: [{ type: core.HostListener, args: ['mouseenter',] }],
            handleMouseLeave: [{ type: core.HostListener, args: ['mouseleave',] }],
            handleVisibilityChange: [{ type: core.HostListener, args: ['document:visibilitychange',] }]
        };
        return ToastifyToastComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var AngularToastifyModule = /** @class */ (function () {
        function AngularToastifyModule() {
        }
        AngularToastifyModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [ToastifyToastComponent, ToastifyToastContainerComponent],
                        imports: [platformBrowser.BrowserModule],
                        exports: [ToastifyToastContainerComponent]
                    },] }
        ];
        return AngularToastifyModule;
    }());

    exports.AngularToastifyModule = AngularToastifyModule;
    exports.ToastService = ToastService;
    exports.ToastifyToastContainerComponent = ToastifyToastContainerComponent;
    exports.ɵa = ToastifyToastComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=angular-toastify.umd.js.map
