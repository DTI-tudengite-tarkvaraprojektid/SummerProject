/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostListener, Input, NgZone, Output } from '@angular/core';
import { ToastType } from '../toast-type';
import { Toast } from '../toast';
var ToastifyToastComponent = /** @class */ (function () {
    function ToastifyToastComponent(_cd, _zone) {
        this._cd = _cd;
        this._zone = _zone;
        this.autoClose = 5000;
        this.hideProgressBar = false;
        this.pauseOnHover = true;
        this.pauseOnVisibilityChange = true;
        this.closeOnClick = true;
        this.dismissEvent = new EventEmitter();
        this.ToastType = ToastType;
        this.running = false;
    }
    /**
     * @return {?}
     */
    ToastifyToastComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.autoCloseRemaining = this.autoClose;
        this.startTime = this.toast.time;
        // Do not start timer when toast is prompted while window is out of focus
        if (this.handleVisibilityChange && document.visibilityState === 'visible') {
            this.startCloseTimer();
        }
    };
    /**
     * @return {?}
     */
    ToastifyToastComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.clearTimerTimeout();
    };
    /**
     * @return {?}
     */
    ToastifyToastComponent.prototype.startCloseTimer = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.running || !this.autoClose) {
            return;
        }
        this.startTime = new Date().getTime();
        this.running = true;
        this.autoDismissTimeout = this._zone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            return setTimeout((/**
             * @return {?}
             */
            function () {
                _this._zone.run((/**
                 * @return {?}
                 */
                function () {
                    _this.dismissEvent.emit();
                    _this._cd.markForCheck();
                }));
            }), _this.autoCloseRemaining);
        }));
    };
    /**
     * @return {?}
     */
    ToastifyToastComponent.prototype.pauseCloseTimer = /**
     * @return {?}
     */
    function () {
        this.running = false;
        this.clearTimerTimeout();
        // Calculate the elapsed time, subtract remaining time
        this.pauseTime = new Date().getTime();
        /** @type {?} */
        var elapsed = this.pauseTime - this.startTime;
        this.autoCloseRemaining -= elapsed;
    };
    /**
     * @return {?}
     */
    ToastifyToastComponent.prototype.clearTimerTimeout = /**
     * @return {?}
     */
    function () {
        if (this.autoDismissTimeout !== undefined) {
            clearTimeout(this.autoDismissTimeout);
        }
    };
    /**
     * @return {?}
     */
    ToastifyToastComponent.prototype.handleDismissButtonAction = /**
     * @return {?}
     */
    function () {
        if (this.closeOnClick) {
            return; // Let the other event handle the dismissal
        }
        this.clearTimerTimeout();
        this.dismissEvent.emit();
    };
    /**
     * @return {?}
     */
    ToastifyToastComponent.prototype.handleHostClick = /**
     * @return {?}
     */
    function () {
        if (this.closeOnClick) {
            this.clearTimerTimeout();
            this.dismissEvent.emit();
        }
    };
    /**
     * @return {?}
     */
    ToastifyToastComponent.prototype.handleMouseEnter = /**
     * @return {?}
     */
    function () {
        if (this.pauseOnHover) {
            this.pauseCloseTimer();
        }
    };
    /**
     * @return {?}
     */
    ToastifyToastComponent.prototype.handleMouseLeave = /**
     * @return {?}
     */
    function () {
        if (this.pauseOnHover) {
            this.startCloseTimer();
        }
    };
    /**
     * @return {?}
     */
    ToastifyToastComponent.prototype.handleVisibilityChange = /**
     * @return {?}
     */
    function () {
        if (!this.pauseOnVisibilityChange) {
            return;
        }
        if (document.visibilityState !== 'visible') {
            this.pauseCloseTimer();
            this._cd.detectChanges();
        }
        else {
            this.startCloseTimer();
        }
    };
    ToastifyToastComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'lib-toastify-toast',
                    template: "<div role=\"alert\" class=\"toast-body\">\n    <div class=\"icon-container\">\n        <span *ngIf=\"iconLibrary == 'material'\" [ngSwitch]=\"toast.type\">\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.info\">info_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.default\">info_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.warning\">warning_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.error\">error_outline</i>\n            <i class=\"material-icons\" *ngSwitchCase=\"ToastType.success\">done</i>\n        </span>\n        <span *ngIf=\"iconLibrary == 'font-awesome'\" [ngSwitch]=\"toast.type\">\n            <i *ngSwitchCase=\"ToastType.info\" class=\"fa fa-info\"></i>\n            <i *ngSwitchCase=\"ToastType.default\" class=\"fa fa-info\"></i>\n            <i *ngSwitchCase=\"ToastType.warning\" class=\"fa fa-exclamation-triangle\"></i>\n            <i *ngSwitchCase=\"ToastType.error\" class=\"fa fa-exclamation\"></i>\n            <i *ngSwitchCase=\"ToastType.success\" class=\"fa fa-check\"></i>\n        </span>\n    </div>\n    <div class=\"toast-container\">\n        <span>{{toast.message}}</span>\n    </div>\n</div>\n<button (click)=\"handleDismissButtonAction()\" class=\"close-button close-button--{{ToastType[toast.type]}}\" type=\"button\" aria-label=\"close\">\u2716</button>\n<div *ngIf=\"!hideProgressBar\" class=\"progress-bar progress-bar--{{ToastType[toast.type]}}\"\n    [style.animation-play-state]=\"running? 'running' : 'paused'\" [style.animation-duration]=\"this.autoClose + 'ms'\" style=\"opacity: 1;\"></div>",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [".toast{position:relative;min-height:64px;box-sizing:border-box;margin-bottom:1rem;padding:8px;border-radius:1px;box-shadow:0 1px 10px 0 rgba(0,0,0,.1),0 2px 15px 0 rgba(0,0,0,.05);display:flex;justify-content:space-between;max-height:800px;overflow:hidden;font-family:sans-serif;cursor:pointer;direction:ltr}.toast--rtl{direction:rtl}.toast--default{background:#fff;color:#aaa}.toast--info{background:#3498db}.toast--success{background:#07bc0c}.toast--warning{background:#f1c40f}.toast--error{background:#e74c3c}.toast-body{margin:auto 0;flex:1;vertical-align:middle}@media only screen and (max-width :480px){.toast{margin-bottom:0}}.close-button{color:#fff;font-weight:700;font-size:14px;background:0 0;outline:0;border:none;padding:0;cursor:pointer;opacity:.7;transition:.3s;align-self:flex-start}.close-button--default{color:#000;opacity:.3}.close-button:focus,.close-button:hover{opacity:1}@-webkit-keyframes trackProgress{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}100%{-webkit-transform:scaleX(0);transform:scaleX(0)}}@keyframes trackProgress{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}100%{-webkit-transform:scaleX(0);transform:scaleX(0)}}.progress-bar{position:absolute;bottom:0;left:0;width:100%;height:5px;z-index:9999;opacity:.7;background-color:rgba(255,255,255,.7);-webkit-transform-origin:left;transform-origin:left;-webkit-animation:linear forwards trackProgress;animation:linear forwards trackProgress}.progress-bar--animated{-webkit-animation:linear forwards trackProgress;animation:linear forwards trackProgress}.progress-bar--controlled{transition:transform .2s;transition:transform .2s,-webkit-transform .2s}.progress-bar--rtl{right:0;left:initial;-webkit-transform-origin:right;transform-origin:right}.progress-bar--default{background:linear-gradient(to right,#4cd964,#5ac8fa,#007aff,#34aadc,#5856d6,#ff2d55)}.icon-container{display:inline-block;width:25px;vertical-align:middle}.icon-container span{margin-right:.5rem;display:inline-block;text-align:center;width:20px}.icon-container span i{vertical-align:middle}.fa,.material-icons{font-size:18px}.toast-container{display:inline-block;width:calc(100% - 25px);vertical-align:middle}"]
                }] }
    ];
    /** @nocollapse */
    ToastifyToastComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: NgZone }
    ]; };
    ToastifyToastComponent.propDecorators = {
        autoClose: [{ type: Input }],
        hideProgressBar: [{ type: Input }],
        pauseOnHover: [{ type: Input }],
        pauseOnVisibilityChange: [{ type: Input }],
        closeOnClick: [{ type: Input }],
        toast: [{ type: Input }],
        iconLibrary: [{ type: Input }],
        dismissEvent: [{ type: Output }],
        handleHostClick: [{ type: HostListener, args: ['click',] }],
        handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }],
        handleMouseLeave: [{ type: HostListener, args: ['mouseleave',] }],
        handleVisibilityChange: [{ type: HostListener, args: ['document:visibilitychange',] }]
    };
    return ToastifyToastComponent;
}());
export { ToastifyToastComponent };
if (false) {
    /** @type {?} */
    ToastifyToastComponent.prototype.autoClose;
    /** @type {?} */
    ToastifyToastComponent.prototype.hideProgressBar;
    /** @type {?} */
    ToastifyToastComponent.prototype.pauseOnHover;
    /** @type {?} */
    ToastifyToastComponent.prototype.pauseOnVisibilityChange;
    /** @type {?} */
    ToastifyToastComponent.prototype.closeOnClick;
    /** @type {?} */
    ToastifyToastComponent.prototype.toast;
    /** @type {?} */
    ToastifyToastComponent.prototype.iconLibrary;
    /** @type {?} */
    ToastifyToastComponent.prototype.dismissEvent;
    /**
     * @type {?}
     * @private
     */
    ToastifyToastComponent.prototype.autoDismissTimeout;
    /**
     * @type {?}
     * @private
     */
    ToastifyToastComponent.prototype.autoCloseRemaining;
    /**
     * @type {?}
     * @private
     */
    ToastifyToastComponent.prototype.pauseTime;
    /**
     * @type {?}
     * @private
     */
    ToastifyToastComponent.prototype.startTime;
    /** @type {?} */
    ToastifyToastComponent.prototype.ToastType;
    /** @type {?} */
    ToastifyToastComponent.prototype.running;
    /**
     * @type {?}
     * @private
     */
    ToastifyToastComponent.prototype._cd;
    /**
     * @type {?}
     * @private
     */
    ToastifyToastComponent.prototype._zone;
}
//# sourceMappingURL=data:application/json;base64,