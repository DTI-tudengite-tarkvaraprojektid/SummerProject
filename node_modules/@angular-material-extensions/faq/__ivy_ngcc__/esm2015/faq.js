import { CommonModule } from '@angular/common';
import { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { FlexLayoutModule } from '@angular/flex-layout';
import { MatCardModule } from '@angular/material/card';
import { MatToolbarModule } from '@angular/material/toolbar';
import { MatButtonModule } from '@angular/material/button';
import { MatInputModule } from '@angular/material/input';
import { MatIconModule } from '@angular/material/icon';
import { MatExpansionModule } from '@angular/material/expansion';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/toolbar';
import * as ɵngcc2 from '@angular/material/card';
import * as ɵngcc3 from '@angular/flex-layout/flex';
import * as ɵngcc4 from '@angular/material/form-field';
import * as ɵngcc5 from '@angular/material/input';
import * as ɵngcc6 from '@angular/forms';
import * as ɵngcc7 from '@angular/material/button';
import * as ɵngcc8 from '@angular/material/icon';
import * as ɵngcc9 from '@angular/material/expansion';
import * as ɵngcc10 from '@angular/common';

function MatFaqComponent_mat_expansion_panel_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-expansion-panel");
    ɵngcc0.ɵɵelementStart(1, "mat-expansion-panel-header");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "p");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const faqItem_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(faqItem_r1.question);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(faqItem_r1.answer);
} }
class MatFaqAdminComponent {
    constructor() {
        this.title = 'Admin';
        this.onFAQItemAdded = new EventEmitter();
    }
    /**
     * @return {?}
     */
    reset() {
        this.question = this.answer = undefined;
    }
    /**
     * @return {?}
     */
    add() {
        /** @type {?} */
        const faqItem = {
            question: this.question,
            answer: this.answer
        };
        this.onFAQItemAdded.emit(faqItem);
        this.reset();
    }
}
MatFaqAdminComponent.ɵfac = function MatFaqAdminComponent_Factory(t) { return new (t || MatFaqAdminComponent)(); };
MatFaqAdminComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFaqAdminComponent, selectors: [["mat-faq-admin"]], inputs: { title: "title" }, outputs: { onFAQItemAdded: "onFAQItemAdded" }, decls: 20, vars: 3, consts: [["color", "primary"], ["fxLayout", "column"], ["appearance", "outline", 1, "full-width"], ["matInput", "", 3, "ngModel", "ngModelChange"], ["fxLayoutAlign", "end"], ["mat-fab", "", "color", "primary", 3, "click"]], template: function MatFaqAdminComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-toolbar", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "mat-card");
        ɵngcc0.ɵɵelementStart(3, "mat-card-content", 1);
        ɵngcc0.ɵɵelementStart(4, "mat-form-field", 2);
        ɵngcc0.ɵɵelementStart(5, "mat-label");
        ɵngcc0.ɵɵtext(6, "The question");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "input", 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function MatFaqAdminComponent_Template_input_ngModelChange_7_listener($event) { return ctx.question = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "mat-hint");
        ɵngcc0.ɵɵtext(9, "Add here the question of your clients");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "mat-form-field", 2);
        ɵngcc0.ɵɵelementStart(11, "mat-label");
        ɵngcc0.ɵɵtext(12, "The answer");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "textarea", 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function MatFaqAdminComponent_Template_textarea_ngModelChange_13_listener($event) { return ctx.answer = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "mat-hint");
        ɵngcc0.ɵɵtext(15, "Please type an appropriate answer here to the above question");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "mat-card-actions", 4);
        ɵngcc0.ɵɵelementStart(17, "button", 5);
        ɵngcc0.ɵɵlistener("click", function MatFaqAdminComponent_Template_button_click_17_listener() { return ctx.add(); });
        ɵngcc0.ɵɵelementStart(18, "mat-icon");
        ɵngcc0.ɵɵtext(19, "add");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngModel", ctx.question);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngModel", ctx.answer);
    } }, directives: [ɵngcc1.MatToolbar, ɵngcc2.MatCard, ɵngcc2.MatCardContent, ɵngcc3.DefaultLayoutDirective, ɵngcc4.MatFormField, ɵngcc4.MatLabel, ɵngcc5.MatInput, ɵngcc6.DefaultValueAccessor, ɵngcc6.NgControlStatus, ɵngcc6.NgModel, ɵngcc4.MatHint, ɵngcc2.MatCardActions, ɵngcc3.DefaultLayoutAlignDirective, ɵngcc7.MatButton, ɵngcc8.MatIcon], styles: [".full-width[_ngcontent-%COMP%]{width:100%}.mat-form-field[_ngcontent-%COMP%]{margin:.8rem 0}"] });
MatFaqAdminComponent.propDecorators = {
    title: [{ type: Input }],
    onFAQItemAdded: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFaqAdminComponent, [{
        type: Component,
        args: [{
                selector: 'mat-faq-admin',
                template: `
    <mat-toolbar color="primary">{{title}}</mat-toolbar>
    <mat-card>
      <mat-card-content fxLayout="column">
        <mat-form-field class="full-width" appearance="outline">
          <mat-label>The question</mat-label>
          <input matInput [(ngModel)]="question">
          <mat-hint>Add here the question of your clients</mat-hint>
        </mat-form-field>

        <mat-form-field class="full-width" appearance="outline">
          <mat-label>The answer</mat-label>
          <textarea matInput [(ngModel)]="answer"></textarea>
          <mat-hint>Please type an appropriate answer here to the above question</mat-hint>
        </mat-form-field>
      </mat-card-content>

      <mat-card-actions fxLayoutAlign="end">
        <button mat-fab color="primary" (click)="add()">
          <mat-icon>add</mat-icon>
        </button>
      </mat-card-actions>
    </mat-card>
  `,
                styles: [`
    .full-width{width:100%}.mat-form-field{margin:.8rem 0}
  `]
            }]
    }], function () { return []; }, { title: [{
            type: Input
        }], onFAQItemAdded: [{
            type: Output
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MatFaqComponent {
    constructor() {
        this.title = 'FAQ';
        this.multi = false;
        this.displayMode = 'default'; // or flat
        // or flat
        this.faqList = [];
    }
}
MatFaqComponent.ɵfac = function MatFaqComponent_Factory(t) { return new (t || MatFaqComponent)(); };
MatFaqComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFaqComponent, selectors: [["mat-faq"]], inputs: { title: "title", multi: "multi", displayMode: "displayMode", faqList: "faqList" }, decls: 4, vars: 4, consts: [["color", "primary"], [1, "faq-container", 3, "displayMode", "multi"], [4, "ngFor", "ngForOf"]], template: function MatFaqComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-toolbar", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "mat-accordion", 1);
        ɵngcc0.ɵɵtemplate(3, MatFaqComponent_mat_expansion_panel_3_Template, 5, 2, "mat-expansion-panel", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("displayMode", ctx.displayMode)("multi", ctx.multi);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.faqList);
    } }, directives: [ɵngcc1.MatToolbar, ɵngcc9.MatAccordion, ɵngcc10.NgForOf, ɵngcc9.MatExpansionPanel, ɵngcc9.MatExpansionPanelHeader], styles: [""] });
MatFaqComponent.propDecorators = {
    title: [{ type: Input }],
    multi: [{ type: Input }],
    displayMode: [{ type: Input }],
    faqList: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFaqComponent, [{
        type: Component,
        args: [{
                selector: 'mat-faq',
                template: `
    <mat-toolbar color="primary">{{title}}</mat-toolbar>
    <mat-accordion [displayMode]="displayMode" [multi]="multi"
                   class="faq-container">
      <mat-expansion-panel *ngFor="let faqItem of faqList">
        <mat-expansion-panel-header>{{faqItem.question}}</mat-expansion-panel-header>
        <p>{{faqItem.answer}}</p>
      </mat-expansion-panel>
    </mat-accordion>
  `,
                styles: [`

  `]
            }]
    }], function () { return []; }, { title: [{
            type: Input
        }], multi: [{
            type: Input
        }], displayMode: [{
            type: Input
        }], faqList: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MatFaqModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: MatFaqModule,
            providers: []
        };
    }
}
MatFaqModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFaqModule });
MatFaqModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFaqModule_Factory(t) { return new (t || MatFaqModule)(); }, imports: [[
            CommonModule,
            FormsModule,
            ReactiveFormsModule,
            FlexLayoutModule,
            MatCardModule,
            MatToolbarModule,
            MatButtonModule,
            MatInputModule,
            MatIconModule,
            MatExpansionModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFaqModule, { declarations: function () { return [MatFaqAdminComponent,
        MatFaqComponent]; }, imports: function () { return [CommonModule,
        FormsModule,
        ReactiveFormsModule,
        FlexLayoutModule,
        MatCardModule,
        MatToolbarModule,
        MatButtonModule,
        MatInputModule,
        MatIconModule,
        MatExpansionModule]; }, exports: function () { return [MatFaqAdminComponent,
        MatFaqComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFaqModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    ReactiveFormsModule,
                    FlexLayoutModule,
                    MatCardModule,
                    MatToolbarModule,
                    MatButtonModule,
                    MatInputModule,
                    MatIconModule,
                    MatExpansionModule
                ],
                exports: [
                    MatFaqAdminComponent,
                    MatFaqComponent
                ],
                declarations: [MatFaqAdminComponent, MatFaqComponent]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { MatFaqAdminComponent, MatFaqComponent, MatFaqModule };

//# sourceMappingURL=faq.js.map